卡槽属性计算功能文档：
//作者：彭亚川
//日期：2016/11/9 17:17:04

----------------------------------------------------------------------------------------
这个项目只是一个整体的设计思路，具体更详细的设计需要结合自己的项目，比如需要转换最终的属性，或者属性之间的相互转换呀之类的，战力合并之类的

该项目设计的优点
1.本项目采用工厂模式，通过反射统一创建工厂（InitMethodInfo方法）按照模块对应方法放到字典里面，开发者不需要关心工厂对象的创建，何时创建，如果有模块增加只需要增加一个实现类，把该模块的属性汇总就ok了，
	一切尽在SlotPartAttrHanlder类里面处理，只需要对应的地方促发属性计算方法CalcAllPartAttr就ok，里面会自行计算和汇总属性
2.如果数值增加对应的属性枚举我们只需要在SlotAttrEnum里面增加枚举就可以了，不需要额外的操作，因为我们把属性枚举--对应的值用字典存储，很方便的，不需要定义多余的字段
3.Hero对象里面有PartAttrs和PartAttr字段，第一个字段存在的意义是方面我们查看数据，我会把数据序列化放到数据库里面，如果发现属性计算不对，直接拉去数据出来，这个是按照模块划分的，每个
	模块都有对应的属性信息，能快速定位，第二个字段是所有模块汇总后的属性，直接使用的哈

之前项目里面采用的属性，并不是字典存放，导致数值每加一次新的属性类型，我这边就要加一个对应的属性处理，处理起来及其复杂，PartAttr这个类的耦合度非常高，添加的时候很容易出错，
特别是新来的公司的伙伴，友好度不够，类里面的代码也特别多，经过思考后改成字典的形式，就算数值增新的属性类型，我只需要增加一个枚举就ok的，这个类就不用去动，也满足开放-封闭原则